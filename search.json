[{"path":[]},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sarah Wright. Author, maintainer. Irene Foster. Author.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wright S, Foster (2025). fetchagol: Fetch Data MetaData ARCGIS Online (AGOL). R package version 0.0.0.9000, https://nationalparkservice.github.io/imd-fetchagol-package/.","code":"@Manual{,   title = {fetchagol: Fetch Data and MetaData from ARCGIS Online (AGOL)},   author = {Sarah Wright and Irene Foster},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://nationalparkservice.github.io/imd-fetchagol-package/}, }"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/index.html","id":"fetchagol-readme","dir":"","previous_headings":"","what":"Fetch Data and MetaData from ARCGIS Online (AGOL)","title":"Fetch Data and MetaData from ARCGIS Online (AGOL)","text":"2024-04-16","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/index.html","id":"about-this-package","dir":"","previous_headings":"","what":"About this package","title":"Fetch Data and MetaData from ARCGIS Online (AGOL)","text":"Add info R package pulls data ArcGIS Online (AGOL) database RStudio. uses httr package query metadata data AGOL database.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/index.html","id":"fill-out-metadata-in-agol-database","dir":"","previous_headings":"","what":"Fill out metadata in AGOL database","title":"Fetch Data and MetaData from ARCGIS Online (AGOL)","text":"tables database (entire feature layer) must fill Entity (table) Attribute metadata. found table Metadata -> metadata -> Attributes -> Data Dictionary. using metadata editor classic can found Open Metadata Editor Classic -> Fields -> Entity Attribute Information -> Entity Attribute Details. must fill information table attributes table. See example help. attribute don’t want imported R, can skip filling metadata. Field Name, Field Alias, Field Type can found Fields tab Data section table AGOL. Class EML type must specified Field Description. can string, integer, decimal, dateTime. integer decimal classes units provided. Standard EML units can found . unit isn’t found list, can still use unit publication process described “customUnit”.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/index.html","id":"lookup-tables","dir":"","previous_headings":"Fill out metadata in AGOL database","what":"Lookup tables","title":"Fetch Data and MetaData from ARCGIS Online (AGOL)","text":"attribute look table can linked attribute. bottom information attribute select Add section card -> Codeset Domain. enter name lookup table link. lookup table must name label column generate metadata CSVs.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/index.html","id":"trouble-shooting-metadata","dir":"","previous_headings":"Fill out metadata in AGOL database","what":"Trouble shooting metadata","title":"Fetch Data and MetaData from ARCGIS Online (AGOL)","text":"metadata filled correctly code run problems importing exporting data metadata.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/index.html","id":"trouble-shooting-when-importing-data","dir":"","previous_headings":"Fill out metadata in AGOL database > Trouble shooting metadata","what":"Trouble shooting when importing data","title":"Fetch Data and MetaData from ARCGIS Online (AGOL)","text":"default fetchRawData() imports metadata information queries data using metadata information. However, metadata unable import metadata query invalid parameters, data import independently. happens, either ) metadata B) metadata doesn’t match data. metadata imported likely one () tables database metadata filled . Simply go AGOL fill metadata using steps . metadata imported query failed, means differences metadata data. likely difference column names two. fixed going metadata AGOL fixing discrepancies. find differences run troubleshootMetadata(). default returns list every element data frame containing data column names don’t exist metadata vice versa. See example . fine column exists data table doesn’t exist metadata (like objectid ). However, metadata columns must exist data table. can see example extra space globalid metadata column name extra column called visit. fix go data table AGOL, fix differences, re-import data running fetchRawData() .","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/index.html","id":"trouble-shooting-when-writing-data","dir":"","previous_headings":"Fill out metadata in AGOL database > Trouble shooting metadata","what":"Trouble shooting when writing data","title":"Fetch Data and MetaData from ARCGIS Online (AGOL)","text":"metadata imported data imported querying metadata, still might problems metadata. problems even data metadata successfully write CSVs. point problems probably missing incorrect metadata field column name field definition, class, unit. Running troubleshootMetadata() parameter allInfo = TRUE can help expose certain problems missing definition, non-valid class, integer double unit. example data metadata successfully wrote CSVs. However, running troubleshootMetadata(all_data, allInfo = TRUE) can see missing definition, non-valid metadata class, integer missing unit. fix problems go data table AGOL, fix problems, re-import data running fetchRawData() .","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/index.html","id":"setting-up-a-headless-account","dir":"","previous_headings":"","what":"Setting up a headless account","title":"Fetch Data and MetaData from ARCGIS Online (AGOL)","text":"use AGOL API headless account scripting permission access AGOL database. recommended save headless account password using keyring package avoid hard coding password function. add headless account information default keyring follow steps . code run .","code":"# Run the function below. Change the username field to the username of your headless account and input the password when prompted keyring::key_set(service = \"AGOL\", username = \"USERNAME\", prompt = \"Password for headless account: \")  # To check the key was saved run code below, filling in the username to your headless account keyring::key_get(service = \"AGOL\", username = \"USERNAME\")"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/cleanData.html","id":null,"dir":"Reference","previous_headings":"","what":"A generalized function to start data cleaning — cleanData","title":"A generalized function to start data cleaning — cleanData","text":"generalized function start data cleaning","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/cleanData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A generalized function to start data cleaning — cleanData","text":"","code":"cleanData(   raw_data,   cols_to_remove = c(\"^objectid$\", \"CreationDate\", \"Creator\", \"EditDate\", \"Editor\"),   id_replacement_names = c(\"globalid\", \"objectid\", \"parentglobalid\"),   exact = TRUE )"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/cleanData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A generalized function to start data cleaning — cleanData","text":"raw_data list tabular data metadata cols_to_remove vector containing names columns remove id_replacement_names vector containing exact columns matched exactly regular expressions used?","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/cleanData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A generalized function to start data cleaning — cleanData","text":"list containing tabular data metadata","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchAGOLToken.html","id":null,"dir":"Reference","previous_headings":"","what":"Get AGOL authentication token — fetchAGOLToken","title":"Get AGOL authentication token — fetchAGOLToken","text":"Treat token password: hard-code scripts save file. expire 60 minutes.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchAGOLToken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get AGOL authentication token — fetchAGOLToken","text":"","code":"fetchAGOLToken(   agol_username,   agol_password = keyring::key_get(service = \"AGOL\", username = agol_username),   root = \"nps.maps.arcgis.com\",   referer = \"https://irma.nps.gov\" )"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchAGOLToken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get AGOL authentication token — fetchAGOLToken","text":"agol_username AGOL headless account username agol_password AGOL headless account password (hard code scripts!) root NPS users keep default. See https://developers.arcgis.com/rest/users-groups--items/root.htm information. referer NPS users keep default. See https://developers.arcgis.com/rest/users-groups--items/generate-token.htm information.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchAGOLToken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get AGOL authentication token — fetchAGOLToken","text":"AGOL authentication token","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchAllRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch tabular data from AGOL — fetchAllRecords","title":"Fetch tabular data from AGOL — fetchAllRecords","text":"Retrieves tabular data AGOL layers tables, even number rows exceeds maximum record count.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchAllRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch tabular data from AGOL — fetchAllRecords","text":"","code":"fetchAllRecords(   data_path,   layer_number,   token,   geometry = FALSE,   where = \"1=1\",   outFields = \"*\" )"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchAllRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch tabular data from AGOL — fetchAllRecords","text":"data_path Feature service URL layer_number Layer number token Authentication token (needed public layers) geometry Include spatial data columns? Works points, tested geometry types Query clause specifying subset rows (optional; defaults rows). See AGOL REST API documentation. outFields String indicating fields return (optional; defaults fields). See AGOL REST API documentation.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchAllRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch tabular data from AGOL — fetchAllRecords","text":"tibble","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchLayerAndTableList.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch feature service info from AGOL — fetchLayerAndTableList","title":"Fetch feature service info from AGOL — fetchLayerAndTableList","text":"Retrieves metadata AGOL layers tables.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchLayerAndTableList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch feature service info from AGOL — fetchLayerAndTableList","text":"","code":"fetchLayerAndTableList(url, token)"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchLayerAndTableList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch feature service info from AGOL — fetchLayerAndTableList","text":"url Feature service URL token Authentication token (needed public layers)","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchLayerAndTableList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch feature service info from AGOL — fetchLayerAndTableList","text":"list","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch metadata from AGOL — fetchMetadata","title":"Fetch metadata from AGOL — fetchMetadata","text":"Retrieves metadata AGOL layers tables.","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch metadata from AGOL — fetchMetadata","text":"","code":"fetchMetadata(url, token, layer_number)"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch metadata from AGOL — fetchMetadata","text":"url Feature service URL token Authentication token (needed public layers) layer_number Optional layer ID","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch metadata from AGOL — fetchMetadata","text":"list","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchRawData.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch tabular data and metadata from AGOL — fetchRawData","title":"Fetch tabular data and metadata from AGOL — fetchRawData","text":"Fetch tabular data metadata AGOL","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchRawData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch tabular data and metadata from AGOL — fetchRawData","text":"","code":"fetchRawData(   database_url,   agol_username,   agol_password = keyring::key_get(service = \"AGOL\", username = agol_username) )"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchRawData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch tabular data and metadata from AGOL — fetchRawData","text":"database_url Feature service URL agol_username AGOL headless account username agol_password AGOL headless account password (hard code scripts!)","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/fetchRawData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch tabular data and metadata from AGOL — fetchRawData","text":"list containing tabular data metadata","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/generateMetadataCSVs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data dictionaries to files — generateMetadataCSVs","title":"Write data dictionaries to files — generateMetadataCSVs","text":"Write data dictionaries files","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/generateMetadataCSVs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data dictionaries to files — generateMetadataCSVs","text":"","code":"generateMetadataCSVs(   data,   dictionary_dir = here::here(\"data\", \"dictionary\"),   dictionary_filenames = c(tables = \"data_dictionary_tables.txt\", attributes =     \"data_dictionary_attributes.txt\", categories = \"data_dictionary_categories.txt\"),   lookup_dir = NA,   verbose = FALSE,   missing_value_dict = hash::hash(keys = c(\"string\", \"integer\", \"decimal\", \"datetime\",     \"date\", \"time\"), values = c(\"N/D\", \"-999\", \"-999\", \"\", \"\", \"\")) )"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/generateMetadataCSVs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data dictionaries to files — generateMetadataCSVs","text":"data output fetchRawData() dictionary_dir Folder store data dictionaries dictionary_filenames Named list names c(\"tables\", \"attributes\", \"categories\") indicating name tables, attributes, categories data dictionaries. encouraged keep default names unless good reason change . lookup_dir Optional folder store lookup tables . left NA, lookups exported. verbose Output feedback console? missing_value_dict dictionary containing key-value pairs key attribute class value code missing value","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/makeColSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate column spec from data dictionary — makeColSpec","title":"Generate column spec from data dictionary — makeColSpec","text":"Given fields data dictionary, create list column specifications can used readr::read_csv() vroom::vroom()","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/makeColSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate column spec from data dictionary — makeColSpec","text":"","code":"makeColSpec(fields)"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/makeColSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate column spec from data dictionary — makeColSpec","text":"fields Fields data dictionary, returned fetchRawData","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/makeColSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate column spec from data dictionary — makeColSpec","text":"list lists","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/removeCols.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to remove specified columns and associated metadata — removeCols","title":"A function to remove specified columns and associated metadata — removeCols","text":"function remove specified columns associated metadata","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/removeCols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to remove specified columns and associated metadata — removeCols","text":"","code":"removeCols(   all_data,   cols_to_remove = c(\"CreationDate\", \"Creator\", \"EditDate\", \"Editor\"),   exact = TRUE )"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/removeCols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to remove specified columns and associated metadata — removeCols","text":"all_data list tabular data metadata cols_to_remove vector containing names columns remove (default creator editor columns) exact columns matched exactly regular expressions used?","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/setDataTypesFromMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Set data types based on AGOL metadata — setDataTypesFromMetadata","title":"Set data types based on AGOL metadata — setDataTypesFromMetadata","text":"Set data types based AGOL metadata","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/setDataTypesFromMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set data types based on AGOL metadata — setDataTypesFromMetadata","text":"","code":"setDataTypesFromMetadata(raw_data)"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/setDataTypesFromMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set data types based on AGOL metadata — setDataTypesFromMetadata","text":"raw_data list tabular data metadata","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/setDataTypesFromMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set data types based on AGOL metadata — setDataTypesFromMetadata","text":"list containing tabular data metadata","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/troubleshootMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to help troubleshoot differences between column names in data and metadata if querying data using metadata fails — troubleshootMetadata","title":"A function to help troubleshoot differences between column names in data and metadata if querying data using metadata fails — troubleshootMetadata","text":"short description...","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/troubleshootMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to help troubleshoot differences between column names in data and metadata if querying data using metadata fails — troubleshootMetadata","text":"","code":"troubleshootMetadata(all_data, returnAll = FALSE, allInfo = FALSE)"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/troubleshootMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to help troubleshoot differences between column names in data and metadata if querying data using metadata fails — troubleshootMetadata","text":"all_data output fetchRawData() containing data metadata returnAll want return column names ones match allInfo attribute information column names returned","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/troubleshootMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to help troubleshoot differences between column names in data and metadata if querying data using metadata fails — troubleshootMetadata","text":"list dfs containing data metadata column names","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/writeToFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data and data dictionaries to files — writeToFiles","title":"Write data and data dictionaries to files — writeToFiles","text":"Write data data dictionaries files","code":""},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/writeToFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data and data dictionaries to files — writeToFiles","text":"","code":"writeToFiles(   all_data,   data_dir = here::here(\"data\", \"final\"),   dictionary_dir = here::here(\"data\", \"dictionary\"),   dictionary_filenames = c(tables = \"data_dictionary_tables.txt\", attributes =     \"data_dictionary_attributes.txt\", categories = \"data_dictionary_categories.txt\"),   lookup_dir = NA,   verbose = FALSE,   removeColumns = TRUE,   cols_to_remove = c(\"CreationDate\", \"Creator\", \"EditDate\", \"Editor\"),   missing_value_dict = hash::hash(keys = c(\"string\", \"integer\", \"decimal\", \"datetime\"),     values = c(\"N/D\", \"-999\", \"-999\", \"\")) )"},{"path":"https://nationalparkservice.github.io/imd-fetchagol-package/reference/writeToFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data and data dictionaries to files — writeToFiles","text":"all_data Output fetchRawData() data_dir Folder store data csv's dictionary_dir Folder store data dictionaries dictionary_filenames Named list names c(\"tables\", \"attributes\", \"categories\") indicating name tables, attributes, categories data dictionaries. encouraged keep default names unless good reason change . lookup_dir Optional folder store lookup tables . left NA, lookups exported. verbose Output feedback console? removeColumns columns removed? cols_to_remove Columns removed, c(\"Editor\", \"Creator\") default can contain personally identifiable information missing_value_dict dictionary containing key-value pairs key attribute class value code missing value","code":""}]
